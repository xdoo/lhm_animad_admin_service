package de.muenchen.animad.admin.administration.service.services.businessactions;

import org.springframework.stereotype.Service;
import org.springframework.beans.factory.annotation.Autowired;

import java.util.Map;

import org.springframework.security.access.prepost.PreAuthorize;
import de.muenchen.animad.admin.administration.service.gen.services.businessactions.CreateAppointment_BusinessActionService;
import de.muenchen.animad.admin.administration.service.gen.domain.Animals_;

/**
 * Provides a service to execute business-actions.
 * If used as generated by GAIA this service will be autowired and called by BusinessActionController.
 */
@Service
@PreAuthorize("hasPermission(T(de.muenchen.animad.admin.administration.security.ResourcesEnum).administration_BUSINESSACTION_CreateAppointment.name(), 'Entitlements')")
public class CreateAppointment_BusinessActionServiceImpl implements CreateAppointment_BusinessActionService {
	// If you need access to the database you can autowire a Repository.
	// Repositories are generated into the package: .gen.rest
	//
	// @Autowired
	// <EntityName>Repository repo;

	/**
	 * This BusinessAction's purpose is: Create an appointment at the veterinarian for an animal
	 * It returns one java.time.LocalDateTime.
	 * TODO: Implement
	 */
	@Override
	public java.time.LocalDateTime createAppointment(Map<String, Object> header, Animals_ species, String animalName, String reasonForAppointment){
		// Stop if parameters are null
		java.util.List<String> nullParams = new java.util.ArrayList<>();
		if(species==null) nullParams.add("species");
		if(animalName==null) nullParams.add("animalName");
		if(reasonForAppointment==null) nullParams.add("reasonForAppointment");
		if(!nullParams.isEmpty()){
			throw new IllegalArgumentException("Expected values in body: Animals_ species, String animalName, String reasonForAppointment - Missing "+nullParams);
		}
		
		throw new UnsupportedOperationException("The BusinessAction createappointment is not yet implemented!");
	}
	
}
